{"version":3,"sources":["Logo.png","models/users.js","components/row/row.js","components/table/table.js","components/header/header.js","components/navbar/navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","User","jsonInfo","firstName","lastName","email","street","city","state","phone","this","name","first","last","streetName","location","streetNumber","number","AppRow","user","props","nextProps","setState","React","Component","AppTable","users","sortField","sortDir","allusers","axios","get","then","res","data","results","length","userList","map","x","loading","currentSortField","sortArray","objects","field","direction","sort","a","b","e","searchValue","target","value","allUsers","filteredUsers","filter","obj","Object","keys","reduce","acc","curr","toLowerCase","includes","userObjects","Col","Form","inline","className","Label","Control","type","onChange","event","doSearch","placeholder","Table","striped","bordered","hover","onClick","onSort","singleUser","index","key","Header","AppNavbar","Navbar","bg","Brand","href","src","logo","width","height","alt","variant","App","useEffect","Container","Row","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d29e8471.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.4b569167.png\";","class User {\n    firstName = '';\n    lastName = '';\n    email = '';\n    street = '';\n    city = '';\n    state = ''\n    phone = '';\n    //when you create an object if you pass in certain information, do this with it\n    //you can't access a method outside of a class\n    constructor(jsonInfo) {\n        if (!jsonInfo){\n            return;\n        }\n        this.firstName = jsonInfo.name && jsonInfo.name.first;\n        this.lastName = jsonInfo.name && jsonInfo.name.last;\n        this.email = jsonInfo.email;\n        const streetName = jsonInfo.location && jsonInfo.location.street && jsonInfo.location.street && jsonInfo.location.street.name;\n        const streetNumber = jsonInfo.location && jsonInfo.location.street && jsonInfo.location.street && jsonInfo.location.street.number;\n        this.street = streetNumber && streetName ? `${streetNumber} ${streetName};` : '';\n        this.city = jsonInfo.location && jsonInfo.location && jsonInfo.location.city;\n        this.state = jsonInfo.location && jsonInfo.location && jsonInfo.location.state;\n        this.phone = jsonInfo.phone\n    }   \n}\nexport default User;","import React from 'react';\n\nclass AppRow extends React.Component {\n    state = {\n        user: this.props.user\n    };\n    componentWillReceiveProps(nextProps) {\n        // Any tim (WHEN) props.email changes, update state.\n        if (nextProps.user !== this.props.user) {\n            this.setState({\n                user: nextProps.user\n            });\n        }\n    }\n\n    render() {\n        const user = this.state.user;\n        return (<tr>\n            <td>{user.firstName}</td>\n            <td>{user.lastName}</td>\n            <td>{user.email}</td>\n            <td>{user.street}</td>\n            <td>{user.city}</td>\n            <td>{user.state}</td>\n            <td>{user.phone}</td>\n        </tr>)\n    };\n}\n\nexport default AppRow;\n","import React from 'react';\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport User from \"../../models/users\";\nimport AppRow from \"../row/row\";\n\nclass AppTable extends React.Component {\n//global object part of every react component \n    state = {\n        users: [],\n        sortField: '',\n        sortDir: 'asc',\n        allusers: [],\n    };\n\n    //built in feature of react\n    //once the comp mounts, it will do something\n    //react components have a lifecycle \n    //once a component has finished doing x, do a certain thing \n    componentDidMount() {\n        axios.get(`https://randomuser.me/api/?results=20&nat=us`)\n            .then(res => {\n                // if (res && res.data && res.data.results) const users = res.data.results;\n                const users = res && res.data && res.data.results;\n                if (!users || users.length === 0){\n                    this.setState({loading: false});\n                    return;\n                }\n\n                //go through the json data array, create user object based on that data \n                //returns an array of user objects \n                const userList = users.map(x => new User(x));\n                this.setState({ allusers: userList, users: userList });\n            })\n    }\n\n    onSort(sortField) {\n        const currentSortField = this.state.sortField;\n        const users = this.state.users;\n        let sortDir = this.state.sortDir;\n        if (currentSortField === sortField) {\n            sortDir = sortDir === 'asc' ? 'desc' : 'asc'\n            this.sortArray(users, sortField,sortDir);\n        }else{\n            sortDir = 'asc'\n            this.sortArray(users, sortField,sortDir);\n        }\n        this.setState({users: users, sortDir: sortDir, sortField: sortField})\n    }\n\n    sortArray(objects, field, direction){\n        if (direction === 'asc'){\n            objects.sort((a,b) => (a[field] > b[field]) ? 1 : ((b[field] > a[field]) ? -1 : 0));\n            //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n            // objects.sort(function(a,b) {\n            //     if (a[field] > b[field]) {\n            //         return 1;\n            //     } \n            //     if (b[field] > a[field]) {\n            //         return -1;\n            //     } \n            //      return 0;\n            // })\n            return;\n        }\n        objects.sort((a,b) => (a[field] < b[field]) ? 1 : ((b[field] < a[field]) ? -1 : 0));\n    }\n\n    doSearch(e) {\n        const searchValue = e.target.value;\n        const allUsers = this.state.allusers;\n        if (!searchValue){\n            this.setState({users: allUsers});\n            return;\n        }\n        const filteredUsers = allUsers.filter((obj)=>{\n            return Object.keys(obj).reduce((acc, curr)=>{\n                return acc || obj[curr].toLowerCase().includes(searchValue);\n            }, false);\n        });\n        this.setState({users: filteredUsers});\n    }\n\n    render() {\n        const userObjects = this.state.users;\n        return <Col>\n            <Form inline className=\"mb-2\">\n                    <Form.Label className=\"my-1 mr-2\">Search:</Form.Label>\n                    <Form.Control type=\"text\" onChange={event => this.doSearch(event)} placeholder=\"Search Table\" />\n            </Form>\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th className=\"pointer\" onClick={() => this.onSort('firstName')}>First Name</th>\n                    <th className=\"pointer\" onClick={() => this.onSort('lastName')}>Last Name</th>\n                    <th className=\"pointer\" onClick={() => this.onSort('email')}>Email</th>\n                    <th className=\"pointer\" onClick={() => this.onSort('street')}>Street</th>\n                    <th className=\"pointer\" onClick={() => this.onSort('city')}>City</th>\n                    <th className=\"pointer\" onClick={() => this.onSort('state')}>State</th>\n                    <th className=\"pointer\" onClick={() => this.onSort('phone')}>Phone</th>\n                </tr>\n                </thead>\n                <tbody>\n                {userObjects.map((singleUser, index) => (\n                    //pass parameters to a component\n                    //parameters are available to components using props\n                    //array map: going through an array \n                    //going through our user objects (when made into class) and putting in our body\n                    <AppRow key={index} user={singleUser}/>\n                ))}\n                </tbody>\n            </Table>\n        </Col>;\n    }\n}\n\nexport default AppTable;\n","import React from 'react';\nimport './header.css';\n\nfunction Header() {\n  return (\n    <header>\n    <div className=\"title\">\n      Click on table header to sort!\n    </div>\n    </header>\n  );\n}\n\nexport default Header;\n\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport logo from '../../Logo.png'\nimport './navbar.css';\n\nfunction AppNavbar() {\n  return (\n      //can only have one parent element\n      <>\n    <Navbar bg=\"white\">\n      <Navbar.Brand href=\"#home\">\n        <img\n          src={logo}\n          width=\"180\"\n          height=\"180\"\n          className=\"d-inline-block align-top\"\n          alt=\"Company logo\"\n        />\n      </Navbar.Brand>\n    </Navbar>\n    <br />\n    <Navbar className=\"nav\" variant=\"light\">\n      <Navbar.Brand href=\"#home\">\n        Employee Directory\n      </Navbar.Brand>\n    </Navbar>\n    </>\n  );\n}\n\nexport default AppNavbar;\n\n\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport AppTable from \"./components/table/table\"\nimport Header from './components/header/header';\nimport AppNavbar from './components/navbar/navbar';\nimport Col from 'react-bootstrap/Col';\n\nfunction App() {\n    useEffect(() => {\n\n    })\n  return (\n    <div className=\"App\">\n        <Container>\n            <Row>\n              <Col><AppNavbar/></Col>\n            </Row>\n            <Row> \n              <Col className=\"text-center\"><Header/></Col>\n            </Row>\n            <Row>\n              <Col><AppTable/></Col>\n            </Row>\n        </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}